//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&lt { flavor = "hold-preferred"; };

&sk { release-after-ms = <1200>; };

/ {
    combos {
        compatible = "zmk,combos";

        // row 0

        combo_qw {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_we {
            bindings = <&kp SPACE>;
            key-positions = <1 2>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_er {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <2 3>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_rt {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <3 4>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_yu {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <5 6>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ui {
            bindings = <&kp AT_SIGN>;
            key-positions = <6 7>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_io {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 8>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_op {
            bindings = <&kp UNDERSCORE>;
            key-positions = <8 9>;
            timeout-ms = <20>;
            slow-release;
        };

        // row 1

        combo_as {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_sd {
            bindings = <&kp ENTER>;
            key-positions = <11 12>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_df {
            bindings = <&LB 0 0>;
            key-positions = <12 13>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_fg {
            bindings = <&kp LSHIFT>;
            key-positions = <13 14>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_hj {
            bindings = <&kp LESS_THAN>;
            key-positions = <15 16>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_jk {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_kl {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 18>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_lsemicolon {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
            timeout-ms = <20>;
            slow-release;
        };

        // row 2

        combo_zx {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <21 22>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_xc {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <22 23>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_cv {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <23 24>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_vb {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <24 25>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_nm {
            bindings = <&kp GREATER_THAN>;
            key-positions = <26 27>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_mcomma {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <27 28>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_comma_dot {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <28 29>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_dot_slash {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <29 30>;
            timeout-ms = <20>;
            slow-release;
        };

        // vertical 01

        combo_qa {
            bindings = <&kp LG(LEFT_BRACKET)>;
            key-positions = <0 10>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ws {
            bindings = <&kp LG(RIGHT_BRACKET)>;
            key-positions = <1 11>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ed {
            bindings = <&kp LS(LC(TAB))>;
            key-positions = <2 12>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_rf {
            bindings = <&kp LC(TAB)>;
            key-positions = <3 13>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_tg {
            bindings = <&kp LG(LS(T))>;
            key-positions = <4 14>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_yh {
            bindings = <&kp GRAVE>;
            key-positions = <5 15>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_uj {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <6 16>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ik {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <7 17>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ol {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <8 18>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_psemicolon {
            bindings = <&kp PIPE>;
            key-positions = <9 19>;
            timeout-ms = <20>;
            slow-release;
        };

        // vertical 12

        combo_az {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <10 21>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_sx {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <11 22>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_dc {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <12 23>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_fv {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 24>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_gb {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <14 25>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_hn {
            bindings = <&kp TILDE>;
            key-positions = <15 26>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_jm {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 27>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_kcomma {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <17 28>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ldot {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <18 29>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_semicolon_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <19 30>;
            timeout-ms = <20>;
            slow-release;
        };

        // down-right 01

        combo_qs {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <0 11>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_wd {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <1 12>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ef {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <2 13>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_rg {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <3 14>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_yj {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <5 16>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_uk {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <6 17>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_il {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <7 18>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_osemicolon {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <8 19>;
            timeout-ms = <20>;
            slow-release;
        };

        // down-right 12

        combo_ax {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <10 22>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_sc {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <11 23>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_dv {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <12 24>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_fb {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 25>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_hm {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <15 27>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_jcomma {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 28>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_kdot {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <17 29>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_lslash {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <18 30>;
            timeout-ms = <20>;
            slow-release;
        };

        // down-left 01

        combo_wa {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <1 10>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_es {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <2 11>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_rd {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <3 12>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_tf {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <4 13>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_uh {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <6 15>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ij {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <7 16>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_ok {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <8 17>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_pl {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <9 18>;
            timeout-ms = <20>;
            slow-release;
        };

        // down-left 12

        combo_sz {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <11 21>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_dx {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <12 22>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_fc {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 23>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_gv {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <14 24>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_jn {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 26>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_km {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <17 27>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_lcomma {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <18 28>;
            timeout-ms = <20>;
            slow-release;
        };

        combo_semicolon_dot {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <19 29>;
            timeout-ms = <20>;
            slow-release;
        };

        device {
            bindings = <&mo 2>;
            key-positions = <20 10>;
            slow-release;
        };
    };

    behaviors {
        sh: sh {
            compatible = "zmk,behavior-hold-tap";
            label = "SH";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            hold-while-undecided;
            hold-while-undecided-linger;
            flavor = "tap-preferred";
        };

        comma: comma {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        period: period {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        question: question {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION";
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        LB: LB {
            compatible = "zmk,behavior-hold-tap";
            label = "LB";
            bindings = <&lb2>, <&lb1>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
        };

        slt: slt {
            compatible = "zmk,behavior-hold-tap";
            label = "SLT";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    macros {
        lb2: double_control {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp LEFT_GUI>;
            label = "DOUBLE_CONTROL";
        };

        lb1: lb1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "LB1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base {
            bindings = <
                &kp Q  &kp W  &kp E             &kp R         &kp T    &kp Y      &kp U            &kp I          &kp O    &kp P
                &kp A  &kp S  &kp D             &kp F         &kp G    &kp H      &kp J            &kp K          &kp L    &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V         &kp B    &kp N      &kp M            &comma         &period  &question         &mo 2
                              &kp LEFT_CONTROL  &kp LEFT_GUI  &mo 1    &kp SPACE  &kp RIGHT_SHIFT  &kp RIGHT_ALT
            >;
        };

        nav_num {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                   &kp LA(BACKSPACE)   &kp BACKSPACE  &kp UP          &kp DELETE     &kp LA(DELETE)        &kp N5       &kp N6    &kp N7      &kp N8    &kp N9
                   &kp LA(LEFT_ARROW)  &kp LEFT       &kp DOWN        &kp RIGHT      &kp LA(RIGHT)         &kp N0       &kp N1    &kp N2      &kp N3    &kp N4
&kp LG(BACKSPACE)  &kp LG(UP_ARROW)    &kp LG(LEFT)   &kp LEFT_SHIFT  &kp LG(RIGHT)  &kp LG(DOWN_ARROW)    &kp PERCENT  &kp PLUS  &kp MINUS   &kp STAR  &kp FSLH  &kp CARET
                                                      &trans          &trans         &trans                &kp EQUAL    &kp HASH  &kp DOLLAR
            >;
        };

        device {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5
     &kp           &kp           &kp           &kp           &bt BT_CLR      &kp F6   &kp F7   &kp F8   &kp F9   &kp F10
&kp  &kp A         &kp           &kp           &kp           &kp             &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &kp
                                 &kp           &kp           &kp             &kp      &kp      &kp
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
